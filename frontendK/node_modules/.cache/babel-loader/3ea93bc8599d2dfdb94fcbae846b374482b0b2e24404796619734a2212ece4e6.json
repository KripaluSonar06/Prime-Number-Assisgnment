{"ast":null,"code":"export const questionsData = {\n  1: {\n    title: \"Pattern Prime Numbers\",\n    description: \"A prime number is 12345678910987654321. Here n is 10. Find the next number that follows this pattern. That number n lies between 1000 and 3000.\",\n    inputs: [{\n      label: \"Min n value\",\n      name: \"minN\",\n      type: \"number\",\n      placeholder: \"1000\",\n      min: 1000,\n      max: 3000\n    }, {\n      label: \"Max n value\",\n      name: \"maxN\",\n      type: \"number\",\n      placeholder: \"3000\",\n      min: 1000,\n      max: 3000\n    }],\n    hint: \"This problem involves creating palindromic numbers by concatenating sequences: 1,2,3,...,n,...,3,2,1 and testing for primality.\",\n    algorithm: \"Generate pattern numbers by concatenating ascending and descending sequences, then check primality using efficient algorithms.\"\n  },\n  2: {\n    title: \"Repunit Primes\",\n    description: \"11 is prime, 111 is not prime. We use the notation, 1n means N ones. For example, 15 means seven ones = 1111111. 1n is represented as (10^n-1)/9. Find 1n is prime.\",\n    inputs: [{\n      label: \"Min n value\",\n      name: \"minN\",\n      type: \"number\",\n      placeholder: \"2\",\n      min: 1\n    }, {\n      label: \"Max n value\",\n      name: \"maxN\",\n      type: \"number\",\n      placeholder: \"100\",\n      min: 1\n    }, {\n      label: \"Exit after how many primes\",\n      name: \"exitCount\",\n      type: \"number\",\n      placeholder: \"5\",\n      min: 1\n    }],\n    hint: \"Repunit numbers follow the pattern 1, 11, 111, 1111... and can be calculated using the formula (10^n-1)/9.\",\n    algorithm: \"Use the mathematical formula to generate repunit numbers efficiently, then apply primality testing.\"\n  },\n  3: {\n    title: \"Mersenne Primes\",\n    description: \"We are interested in Mersenne primes. A Mersenne prime is a prime number that is one less than a power of two. Find Mersenne primes of the form 2^p - 1 where p is prime.\",\n    inputs: [{\n      label: \"Min p value\",\n      name: \"minP\",\n      type: \"number\",\n      placeholder: \"2\",\n      min: 2\n    }, {\n      label: \"Max p value\",\n      name: \"maxP\",\n      type: \"number\",\n      placeholder: \"100\",\n      min: 2\n    }],\n    hint: \"Mersenne primes have the form 2^p - 1 where p itself must be prime. These are among the largest known primes.\",\n    algorithm: \"First verify that p is prime, then compute 2^p - 1 and test for primality using specialized algorithms.\"\n  },\n  4: {\n    title: \"Brocard's Conjecture\",\n    description: \"Brocard's conjecture states that there are at least four primes between the squares of consecutive primes greater than 2.\",\n    inputs: [{\n      label: \"Min p value\",\n      name: \"minP\",\n      type: \"number\",\n      placeholder: \"3\",\n      min: 3\n    }, {\n      label: \"Max p value\",\n      name: \"maxP\",\n      type: \"number\",\n      placeholder: \"20\",\n      min: 3\n    }],\n    hint: \"This conjecture involves finding consecutive primes and checking the number of primes between their squares.\",\n    algorithm: \"Find consecutive primes, compute their squares, then count primes in the interval between consecutive prime squares.\"\n  },\n  5: {\n    title: \"Palindromic Primes\",\n    description: \"Find palindromic prime numbers within specified digit ranges. These are primes that read the same forwards and backwards.\",\n    inputs: [{\n      label: \"Minimum digits\",\n      name: \"minDigits\",\n      type: \"number\",\n      placeholder: \"3\",\n      min: 1\n    }, {\n      label: \"Maximum digits\",\n      name: \"maxDigits\",\n      type: \"number\",\n      placeholder: \"7\",\n      min: 1\n    }, {\n      label: \"Exit after how many primes\",\n      name: \"exitCount\",\n      type: \"number\",\n      placeholder: \"5\",\n      min: 1\n    }],\n    hint: \"Generate palindromic numbers systematically by constructing the first half and mirroring it.\",\n    algorithm: \"Construct palindromes by generating the first half and creating the mirror image, then test for primality.\"\n  },\n  6: {\n    title: \"Perfect Numbers\",\n    description: \"A perfect number is a positive integer equal to the sum of its positive proper divisors. Find perfect numbers using the formula 2^(p-1) * (2^p - 1) where 2^p - 1 is prime.\",\n    inputs: [{\n      label: \"Min p value\",\n      name: \"minP\",\n      type: \"number\",\n      placeholder: \"2\",\n      min: 2\n    }, {\n      label: \"Max p value\",\n      name: \"maxP\",\n      type: \"number\",\n      placeholder: \"20\",\n      min: 2\n    }],\n    hint: \"Perfect numbers are closely related to Mersenne primes. If 2^p - 1 is prime, then 2^(p-1) * (2^p - 1) is perfect.\",\n    algorithm: \"Find Mersenne primes 2^p - 1, then compute the corresponding perfect number using Euclid's formula.\"\n  },\n  7: {\n    title: \"Prime Conjectures Collection\",\n    description: \"Explore various famous prime number conjectures including Wieferich primes, Goldbach conjecture, and others.\",\n    inputs: [{\n      label: \"Conjecture type (a-f)\",\n      name: \"type\",\n      type: \"select\",\n      options: [{\n        value: \"a\",\n        label: \"Wieferich Primes\"\n      }, {\n        value: \"b\",\n        label: \"Goldbach Conjecture\"\n      }, {\n        value: \"c\",\n        label: \"Weak Goldbach Problem\"\n      }, {\n        value: \"d\",\n        label: \"Prime Differences\"\n      }, {\n        value: \"e\",\n        label: \"Legendre's Conjecture\"\n      }, {\n        value: \"f\",\n        label: \"Oppermann's Conjecture\"\n      }]\n    }, {\n      label: \"Upper limit\",\n      name: \"limit\",\n      type: \"number\",\n      placeholder: \"1000\",\n      min: 1\n    }],\n    hint: \"These are famous unsolved or recently solved problems in number theory, each exploring different patterns in prime distribution.\",\n    algorithm: \"Each conjecture has its own specific algorithm for verification within given bounds.\",\n    subProblems: {\n      'a': {\n        title: \"Wieferich Primes\",\n        description: \"Find primes p where 2^(p-1) â‰¡ 1 (mod p^2)\"\n      },\n      'b': {\n        title: \"Goldbach Conjecture\",\n        description: \"Every even integer > 2 = sum of two primes\"\n      },\n      'c': {\n        title: \"Weak Goldbach Problem\",\n        description: \"Every odd number > 5 = sum of three primes\"\n      },\n      'd': {\n        title: \"Prime Differences\",\n        description: \"Every even positive integer = difference of two primes\"\n      },\n      'e': {\n        title: \"Legendre's Conjecture\",\n        description: \"Prime between n^2 and (n+1)^2\"\n      },\n      'f': {\n        title: \"Oppermann's Conjecture\",\n        description: \"Prime between n(n-1) and n^2, and between n^2 and n(n+1)\"\n      }\n    }\n  }\n};\nexport default questionsData;","map":{"version":3,"names":["questionsData","title","description","inputs","label","name","type","placeholder","min","max","hint","algorithm","options","value","subProblems"],"sources":["C:/Users/diksh/Downloads/prime-numbers-assignment-complete/prime-numbers-assignment/frontend/src/questionData.js"],"sourcesContent":["export const questionsData = {\n  1: {\n    title: \"Pattern Prime Numbers\",\n    description: \"A prime number is 12345678910987654321. Here n is 10. Find the next number that follows this pattern. That number n lies between 1000 and 3000.\",\n    inputs: [\n      { label: \"Min n value\", name: \"minN\", type: \"number\", placeholder: \"1000\", min: 1000, max: 3000 },\n      { label: \"Max n value\", name: \"maxN\", type: \"number\", placeholder: \"3000\", min: 1000, max: 3000 }\n    ],\n    hint: \"This problem involves creating palindromic numbers by concatenating sequences: 1,2,3,...,n,...,3,2,1 and testing for primality.\",\n    algorithm: \"Generate pattern numbers by concatenating ascending and descending sequences, then check primality using efficient algorithms.\"\n  },\n  2: {\n    title: \"Repunit Primes\",\n    description: \"11 is prime, 111 is not prime. We use the notation, 1n means N ones. For example, 15 means seven ones = 1111111. 1n is represented as (10^n-1)/9. Find 1n is prime.\",\n    inputs: [\n      { label: \"Min n value\", name: \"minN\", type: \"number\", placeholder: \"2\", min: 1 },\n      { label: \"Max n value\", name: \"maxN\", type: \"number\", placeholder: \"100\", min: 1 },\n      { label: \"Exit after how many primes\", name: \"exitCount\", type: \"number\", placeholder: \"5\", min: 1 }\n    ],\n    hint: \"Repunit numbers follow the pattern 1, 11, 111, 1111... and can be calculated using the formula (10^n-1)/9.\",\n    algorithm: \"Use the mathematical formula to generate repunit numbers efficiently, then apply primality testing.\"\n  },\n  3: {\n    title: \"Mersenne Primes\",\n    description: \"We are interested in Mersenne primes. A Mersenne prime is a prime number that is one less than a power of two. Find Mersenne primes of the form 2^p - 1 where p is prime.\",\n    inputs: [\n      { label: \"Min p value\", name: \"minP\", type: \"number\", placeholder: \"2\", min: 2 },\n      { label: \"Max p value\", name: \"maxP\", type: \"number\", placeholder: \"100\", min: 2 }\n    ],\n    hint: \"Mersenne primes have the form 2^p - 1 where p itself must be prime. These are among the largest known primes.\",\n    algorithm: \"First verify that p is prime, then compute 2^p - 1 and test for primality using specialized algorithms.\"\n  },\n  4: {\n    title: \"Brocard's Conjecture\",\n    description: \"Brocard's conjecture states that there are at least four primes between the squares of consecutive primes greater than 2.\",\n    inputs: [\n      { label: \"Min p value\", name: \"minP\", type: \"number\", placeholder: \"3\", min: 3 },\n      { label: \"Max p value\", name: \"maxP\", type: \"number\", placeholder: \"20\", min: 3 }\n    ],\n    hint: \"This conjecture involves finding consecutive primes and checking the number of primes between their squares.\",\n    algorithm: \"Find consecutive primes, compute their squares, then count primes in the interval between consecutive prime squares.\"\n  },\n  5: {\n    title: \"Palindromic Primes\",\n    description: \"Find palindromic prime numbers within specified digit ranges. These are primes that read the same forwards and backwards.\",\n    inputs: [\n      { label: \"Minimum digits\", name: \"minDigits\", type: \"number\", placeholder: \"3\", min: 1 },\n      { label: \"Maximum digits\", name: \"maxDigits\", type: \"number\", placeholder: \"7\", min: 1 },\n      { label: \"Exit after how many primes\", name: \"exitCount\", type: \"number\", placeholder: \"5\", min: 1 }\n    ],\n    hint: \"Generate palindromic numbers systematically by constructing the first half and mirroring it.\",\n    algorithm: \"Construct palindromes by generating the first half and creating the mirror image, then test for primality.\"\n  },\n  6: {\n    title: \"Perfect Numbers\",\n    description: \"A perfect number is a positive integer equal to the sum of its positive proper divisors. Find perfect numbers using the formula 2^(p-1) * (2^p - 1) where 2^p - 1 is prime.\",\n    inputs: [\n      { label: \"Min p value\", name: \"minP\", type: \"number\", placeholder: \"2\", min: 2 },\n      { label: \"Max p value\", name: \"maxP\", type: \"number\", placeholder: \"20\", min: 2 }\n    ],\n    hint: \"Perfect numbers are closely related to Mersenne primes. If 2^p - 1 is prime, then 2^(p-1) * (2^p - 1) is perfect.\",\n    algorithm: \"Find Mersenne primes 2^p - 1, then compute the corresponding perfect number using Euclid's formula.\"\n  },\n  7: {\n    title: \"Prime Conjectures Collection\",\n    description: \"Explore various famous prime number conjectures including Wieferich primes, Goldbach conjecture, and others.\",\n    inputs: [\n      { label: \"Conjecture type (a-f)\", name: \"type\", type: \"select\", \n        options: [\n          { value: \"a\", label: \"Wieferich Primes\" },\n          { value: \"b\", label: \"Goldbach Conjecture\" },\n          { value: \"c\", label: \"Weak Goldbach Problem\" },\n          { value: \"d\", label: \"Prime Differences\" },\n          { value: \"e\", label: \"Legendre's Conjecture\" },\n          { value: \"f\", label: \"Oppermann's Conjecture\" }\n        ]\n      },\n      { label: \"Upper limit\", name: \"limit\", type: \"number\", placeholder: \"1000\", min: 1 }\n    ],\n    hint: \"These are famous unsolved or recently solved problems in number theory, each exploring different patterns in prime distribution.\",\n    algorithm: \"Each conjecture has its own specific algorithm for verification within given bounds.\",\n    subProblems: {\n      'a': { title: \"Wieferich Primes\", description: \"Find primes p where 2^(p-1) â‰¡ 1 (mod p^2)\" },\n      'b': { title: \"Goldbach Conjecture\", description: \"Every even integer > 2 = sum of two primes\" },\n      'c': { title: \"Weak Goldbach Problem\", description: \"Every odd number > 5 = sum of three primes\" },\n      'd': { title: \"Prime Differences\", description: \"Every even positive integer = difference of two primes\" },\n      'e': { title: \"Legendre's Conjecture\", description: \"Prime between n^2 and (n+1)^2\" },\n      'f': { title: \"Oppermann's Conjecture\", description: \"Prime between n(n-1) and n^2, and between n^2 and n(n+1)\" }\n    }\n  }\n};\n\nexport default questionsData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}